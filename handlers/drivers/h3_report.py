from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.reply import reply_report_period, reply_drive_menu

router = Router()


class ReportStates(StatesGroup):
    """FSM –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—è"""
    choosing_period = State()


@router.message(F.text == "–û—Ç—á—ë—Ç üìä")
async def start_report(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –æ—Ç—á—ë—Ç–∞"""
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ—Ç—á—ë—Ç–∞:",
        reply_markup=reply_report_period()
    )
    await state.set_state(ReportStates.choosing_period)


@router.message(ReportStates.choosing_period, F.text.in_(["–ó–∞ –¥–µ–Ω—å üìÜ", "–ó–∞ –º–µ—Å—è—Ü üìÖ"]))
async def show_report(message: Message, state: FSMContext):
    """–í—ã–≤–æ–¥ –æ—Ç—á—ë—Ç–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É"""
    period = "–¥–µ–Ω—å" if "–¥–µ–Ω—å" in message.text.lower() else "–º–µ—Å—è—Ü"

    income = 1500.00
    expense = 300.00
    balance = income - expense

    await message.answer(
        f"üìä –û—Ç—á—ë—Ç –∑–∞ {period}:\n\n"
        f"–î–æ—Ö–æ–¥—ã: {income:.2f} ‚ÇΩ\n"
        f"–†–∞—Å—Ö–æ–¥—ã: {expense:.2f} ‚ÇΩ\n"
        f"–ë–∞–ª–∞–Ω—Å: {balance:.2f} ‚ÇΩ",
        reply_markup=reply_drive_menu()
    )
    await state.clear()


@router.message(F.text.in_(["–ù–∞–∑–∞–¥ ‚Ü©", "üîô –ù–∞–∑–∞–¥"]))
async def back_to_menu(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–æ–¥–∏—Ç–µ–ª—è"""
    await state.clear()
    await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_drive_menu())
