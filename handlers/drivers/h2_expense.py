from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.reply import reply_back_button, reply_drive_menu
from services.google_sheets import add_expense

router = Router()

class ExpenseStates(StatesGroup):
    """FSM –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞"""
    choosing_type = State()
    waiting_comment = State()
    waiting_amount = State()


@router.message(F.text == "üí∏ –†–∞—Å—Ö–æ–¥")
async def start_expense(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞"""
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞:",
        reply_markup=reply_back_button()
    )
    await state.set_state(ExpenseStates.choosing_type)


@router.message(ExpenseStates.choosing_type)
async def expense_type_chosen(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–∞—Å—Ö–æ–¥–∞ –∏ –∑–∞–ø—Ä–æ—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    await state.update_data(expense_type=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", reply_markup=reply_back_button())
    await state.set_state(ExpenseStates.waiting_comment)


@router.message(ExpenseStates.waiting_comment)
async def expense_comment_entered(message: Message, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏ –∑–∞–ø—Ä–æ—Å —Å—É–º–º—ã"""
    await state.update_data(comment=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞:")
    await state.set_state(ExpenseStates.waiting_amount)


@router.message(ExpenseStates.waiting_amount)
async def expense_amount_entered(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ –≤ Google Sheets"""
    try:
        amount = float(message.text.replace(",", "."))
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º:")
        return

    data = await state.get_data()
    add_expense(
        driver_id=message.from_user.id,
        expense_type=data["expense_type"],
        comment=data["comment"],
        amount=amount
    )

    await message.answer("–†–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ", reply_markup=reply_drive_menu())
    await state.clear()


@router.message(F.text == "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
async def back_button(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –≤–æ–¥–∏—Ç–µ–ª—è"""
    await state.clear()
    await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é", reply_markup=reply_drive_menu())
