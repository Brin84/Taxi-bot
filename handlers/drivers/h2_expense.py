from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from keyboards.reply import reply_expense_back, reply_drive_menu
from services.google_sheets import add_record

router = Router()

class ExpenseStates(StatesGroup):
    """FSM –¥–ª—è —Ä–∞—Å—Ö–æ–¥–æ–≤"""
    waiting_for_amount_and_comment = State()


@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ üßæ")
async def start_expense(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞"""
    await message.answer(
        "<b>–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥:</b>\n"
        "–ü—Ä–∏–º–µ—Ä:‚è¨\n"
        "<i>20 —Ç–æ–ø–ª–∏–≤–æ</i>\n",
        reply_markup=reply_expense_back(),
        parse_mode="HTML"
    )
    await state.set_state(ExpenseStates.waiting_for_amount_and_comment)


@router.message(ExpenseStates.waiting_for_amount_and_comment)
async def process_expense(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    if message.text == "üîô –ù–∞–∑–∞–¥":
        await state.clear()
        await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_drive_menu())
        return

    try:
        parts = message.text.split(maxsplit=1)
        amount = float(parts[0].replace(",", "."))
        comment = parts[1] if len(parts) > 1 else "-"
    except (ValueError, IndexError):
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 20 –∑–∞–ø—Ä–∞–≤–∫–∞")
        return

    add_record(
        user_id=message.from_user.id,
        username=message.from_user.full_name,
        record_type='—Ä–∞—Å—Ö–æ–¥',
        subcategory="—Ä–∞—Å—Ö–æ–¥",
        amount=amount,
        comment=comment
    )

    await message.answer(
        f"‚úÖ –†–∞—Å—Ö–æ–¥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:\n"
        f"–°—É–º–º–∞: {amount:.2f} ‚ÇΩ\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}",
        reply_markup=reply_drive_menu()
    )
    await state.clear()


@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_drive_menu())
