from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from utils.auth import is_driver

router = Router()


class ExpenseStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞"""
    choosing_type = State()
    entering_comment = State()
    entering_amount = State()


@router.message(F.text == "üí∏ –†–∞—Å—Ö–æ–¥")
async def expense_handler(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–∞ ‚Äî –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    user_id = message.from_user.id
    if not is_driver(user_id):
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π.")
        return

    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞:\n\n"
             "‚õΩ –¢–æ–ø–ª–∏–≤–æ\n"
             "üîß –†–µ–º–æ–Ω—Ç\n"
             "‚ùî –î—Ä—É–≥–æ–µ"
    )
    await state.set_state(ExpenseStates.choosing_type)


@router.message(ExpenseStates.choosing_type)
async def process_expense_type(message: Message, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"""
    expense_type = message.text
    await state.update_data(expense_type=expense_type)

    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–∞—Å—Ö–æ–¥—É:")
    await state.set_state(ExpenseStates.entering_comment)


@router.message(ExpenseStates.entering_comment)
async def process_expense_comment(message: Message, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É"""
    comment = message.text
    await state.update_data(comment=comment)

    await message.answer("üíµ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞ (–≤ —Ä—É–±–ª—è—Ö):")
    await state.set_state(ExpenseStates.entering_amount)


@router.message(ExpenseStates.entering_amount)
async def process_expense_amount(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è ‚Äî —Ñ–∏–Ω–∞–ª"""
    try:
        amount = float(message.text.replace(",", "."))
    except ValueError:
        await message.answer("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 15")
        return

    await state.update_data(amount=amount)
    data = await state.get_data()

    await message.answer(
        text=(
            f"‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:\n\n"
            f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {data['expense_type']}\n"
            f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data['comment']}\n"
            f"üíµ –°—É–º–º–∞: {data['amount']} —Ä—É–±."
        )
    )

    await state.clear()
